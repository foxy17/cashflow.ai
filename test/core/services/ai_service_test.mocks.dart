// Mocks generated by Mockito 5.4.4 from annotations
// in cashflow_ai/test/core/services/ai_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cashflow_ai/core/services/ai/openai_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:openai_dart/openai_dart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOpenAIClient_0 extends _i1.SmartFake implements _i2.OpenAIClient {
  _FakeOpenAIClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OpenAIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAIService extends _i1.Mock implements _i3.OpenAIService {
  @override
  _i2.OpenAIClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeOpenAIClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeOpenAIClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.OpenAIClient);

  @override
  void updateApiKey(String? apiKey) => super.noSuchMethod(
        Invocation.method(
          #updateApiKey,
          [apiKey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDefaultModel(_i2.ChatCompletionModel? model) => super.noSuchMethod(
        Invocation.method(
          #updateDefaultModel,
          [model],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<Map<String, dynamic>> generateStructuredResponse({
    required String? content,
    required String? systemMessage,
    required Map<String, dynamic>? schema,
    String? model,
    String? schemaName,
    String? schemaDescription,
    Map<String, dynamic>? additionalOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateStructuredResponse,
          [],
          {
            #content: content,
            #systemMessage: systemMessage,
            #schema: schema,
            #model: model,
            #schemaName: schemaName,
            #schemaDescription: schemaDescription,
            #additionalOptions: additionalOptions,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
